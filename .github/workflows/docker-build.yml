name: Build, Push to Docker Hub, and Deploy to Environments

on:
  push:
    branches:
      - main
      - Development
      - Stage
      - Release-Candidate
      - UAT
      - Production
  pull_request:
    branches:
      - main
      - Development
      - Stage
      - Release-Candidate
      - UAT
      - Production

permissions:
  contents: read
  security-events: write  # For uploading SARIF results to GitHub Security Scanning

jobs:
  snyk:
    permissions:
      contents: read # For actions/checkout to fetch code
      security-events: write # For github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Snyk CLI to check for security issues
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Step 3: Run Snyk Code (SAST) analysis and upload results to GitHub Code Scanning
      - name: Run Snyk Code test
        run: snyk code test --sarif > snyk-code.sarif

      # Step 4: Monitor Snyk Open Source (SCA) issues for all projects
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects

      # Step 5: Run Snyk Infrastructure as Code (IaC) test
      - name: Snyk IaC test and report
        run: snyk iac test --report

      # Step 6: Upload the results to GitHub Code Scanning
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif

  build_and_push:
    needs: snyk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/your-image-name:latest

      - name: Logout from Docker Hub
        run: docker logout

  promote_and_deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [Development, Stage, Release-Candidate, UAT, Production]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Fetch all branches and Checkout ${{ matrix.environment }} branch
        run: |
          git fetch --all
          git checkout ${{ matrix.environment }} || git checkout -b ${{ matrix.environment }}

      - name: Merge main into ${{ matrix.environment }}
        run: |
          git pull origin main
          git push origin ${{ matrix.environment }}

      - name: Deploy to ${{ matrix.environment }}
        run: |
          echo "Deploying to ${{ matrix.environment }}"
          # Add your deployment commands here

      - name: Push changes back to ${{ matrix.environment }}
        run: git push origin ${{ matrix.environment }}

      - name: Logout from Docker Hub
        run: docker logout
